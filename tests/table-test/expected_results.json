{"version":3,"status":"fail","tests":[{"name":"testFrom with data set #0","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$gs = from($date);\n\n$this->assertSame($expected, $gs->format('Y-m-d H:i:s'));\n","message":"GigasecondTest::testFrom with data set #0 ('2011-04-25', '2043-01-01 01:46:40')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:70"},{"name":"testFrom with data set #1","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$gs = from($date);\n\n$this->assertSame($expected, $gs->format('Y-m-d H:i:s'));\n","message":"GigasecondTest::testFrom with data set #1 ('1977-06-13', '2009-02-19 01:46:40')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:70"},{"name":"testFrom with data set #2","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$gs = from($date);\n\n$this->assertSame($expected, $gs->format('Y-m-d H:i:s'));\n","message":"GigasecondTest::testFrom with data set #2 ('1959-07-19', '1991-03-27 01:46:40')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:70"},{"name":"testFrom with data set #3","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$gs = from($date);\n\n$this->assertSame($expected, $gs->format('Y-m-d H:i:s'));\n","message":"GigasecondTest::testFrom with data set #3 ('2015-01-24 22:00:00', '2046-10-02 23:46:40')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:70"},{"name":"testFrom with data set #4","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$gs = from($date);\n\n$this->assertSame($expected, $gs->format('Y-m-d H:i:s'));\n","message":"GigasecondTest::testFrom with data set #4 ('2015-01-24 23:59:59', '2046-10-03 01:46:39')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:70"},{"name":"testFromReturnType with data set #0","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$this->assertInstanceOf(DateTimeImmutable::class, from($date));\n","message":"GigasecondTest::testFromReturnType with data set #0 ('2011-04-25')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:82"},{"name":"testFromReturnType with data set #1","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$this->assertInstanceOf(DateTimeImmutable::class, from($date));\n","message":"GigasecondTest::testFromReturnType with data set #1 ('1977-06-13')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:82"},{"name":"testFromReturnType with data set #2","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$this->assertInstanceOf(DateTimeImmutable::class, from($date));\n","message":"GigasecondTest::testFromReturnType with data set #2 ('1959-07-19')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:82"},{"name":"testFromReturnType with data set #3","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$this->assertInstanceOf(DateTimeImmutable::class, from($date));\n","message":"GigasecondTest::testFromReturnType with data set #3 ('2015-01-24 22:00:00')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:82"},{"name":"testFromReturnType with data set #4","status":"error","test_code":"$date = $this->dateSetup($inputDate);\n$this->assertInstanceOf(DateTimeImmutable::class, from($date));\n","message":"GigasecondTest::testFromReturnType with data set #4 ('2015-01-24 23:59:59')\nBadFunctionCallException: Implement the from function\n\n\/opt\/test-runner\/tests\/table-test\/Gigasecond.php:29\n\/opt\/test-runner\/tests\/table-test\/GigasecondTest.php:82"},{"name":"testRegularTest","status":"pass","test_code":"$this->assertEquals(1, 1);\n"}]}
